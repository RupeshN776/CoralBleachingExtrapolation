<script>
    let map;
    let infoWindow;
    let currentPolygon = null;
    function getRegionName(regionId) {
        switch (regionId) {
            case 1: return "Atlantic Ocean";
            case 2: return "Indian Ocean";
            case 3: return "Pacific Ocean";
            default: return "Unknown Region";
        }
    }
    async function loadLatestPolygon() {
        try {
            const res = await fetch('/Home/GetLatestPolygonJson');
            const data = await res.json();
            if (!data.success || !data.polygon) {
                console.error("No polygon data found.");
                return;
            }
            // Remove previous polygon if it exists
            if (currentPolygon) {
                currentPolygon.setMap(null);
            }
            const coords = JSON.parse(data.polygon);
            const bounds = new google.maps.LatLngBounds();
            currentPolygon = new google.maps.Polygon({
                paths: coords,
                strokeColor: "#FF0000",
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: "#FF0000",
                fillOpacity: 0.35
            });
            currentPolygon.setMap(map);
            coords.forEach(coord => bounds.extend(new google.maps.LatLng(coord.lat, coord.lng)));
            map.fitBounds(bounds);
            currentPolygon.addListener("click", (event) => {
                const contentHtml = `
                            <div class="info-window">
                                <h4>${data.coralName || "Unknown Coral"}</h4>
                                <ul>
                                    <li><strong>Origin:</strong> ${data.originName || "N/A"}</li>
                                    <li><strong>Family:</strong> ${data.family || "N/A"}</li>
                                    <li><strong>Genus:</strong> ${data.genus || "N/A"}</li>
                                    <li><strong>Species:</strong> ${data.species || "N/A"}</li>
                                    <li><strong>Area (km²):</strong> ${data.gisAreaKm2?.toFixed(2) || "N/A"}</li>
                                    <li><strong>Region:</strong> ${getRegionName(data.regionId)}</li>
                                    <li><strong>Lat:</strong> ${event.latLng.lat().toFixed(5)}</li>
                                    <li><strong>Lng:</strong> ${event.latLng.lng().toFixed(5)}</li>
                                </ul>
                                <a href="/Home/Update/${data.id}" class="btn btn-primary btn-sm" target="_blank">Update</a>
                            </div>
                        `;
                infoWindow.setContent(contentHtml);
                infoWindow.setPosition(event.latLng);
                infoWindow.open(map);
            });
        } catch (error) {
            console.error("Error loading map data:", error);
        }
    }
    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 5,
            center: { lat: 0.0, lng: 0.0 }
        });
        infoWindow = new google.maps.InfoWindow();
        loadLatestPolygon();
        document.getElementById("randomBtn").addEventListener("click", () => {
            loadLatestPolygon();
        });
    }
    // Handle "Show on Map" button click from the table
    document.addEventListener("click", async function (e) {
        if (e.target && e.target.classList.contains("show-on-map")) {
            const coralId = e.target.getAttribute("data-id");
            try {
                const res = await fetch(`/Home/GetPolygonById?id=${coralId}`);
                const data = await res.json();
                if (!data.success || !data.polygon) {
                    alert("Could not load selected polygon.");
                    return;
                }
                if (currentPolygon) {
                    currentPolygon.setMap(null);
                }
                const coords = JSON.parse(data.polygon);
                const bounds = new google.maps.LatLngBounds();
                currentPolygon = new google.maps.Polygon({
                    paths: coords,
                    strokeColor: "#008000",
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: "#008000",
                    fillOpacity: 0.35
                });
                currentPolygon.setMap(map);
                coords.forEach(coord => bounds.extend(new google.maps.LatLng(coord.lat, coord.lng)));
                map.fitBounds(bounds);
                currentPolygon.addListener("click", (event) => {
                    const contentHtml = `
                                <div class="info-window">
                                    <h4>${data.coralName || "Unknown Coral"}</h4>
                                    <ul>
                                        <li><strong>Origin:</strong> ${data.originName || "N/A"}</li>
                                        <li><strong>Family:</strong> ${data.family || "N/A"}</li>
                                        <li><strong>Genus:</strong> ${data.genus || "N/A"}</li>
                                        <li><strong>Species:</strong> ${data.species || "N/A"}</li>
                                        <li><strong>Area (km²):</strong> ${data.gisAreaKm2?.toFixed(2) || "N/A"}</li>
                                        <li><strong>Region:</strong> ${data.regionName}</li>
                                        <li><strong>Lat:</strong> ${event.latLng.lat().toFixed(5)}</li>
                                        <li><strong>Lng:</strong> ${event.latLng.lng().toFixed(5)}</li>
                                    </ul>
                                    <a href="/Home/Update/${data.id}" class="btn btn-primary btn-sm" target="_blank">Update</a>
                                </div>
                            `;
                    infoWindow.setContent(contentHtml);
                    infoWindow.setPosition(event.latLng);
                    infoWindow.open(map);
                });
            } catch (err) {
                console.error("Error fetching polygon by ID:", err);
            }
        }
    });
    window.initMap = initMap;
</script>

<!-- Map Container -->
<div id="map" style="width: 100%; height: 500px; margin-top: 20px;"></div>

<div class="d-flex justify-content-between">
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
        Home
    </a>
</div>

<script defer src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.GoogleApiKey&callback=initMap"></script>